#pragma once
//=====================================================================//
/*!	@file
	@brief	Tiny 3D Glaphics Library (Tiny OpenGL)
    @author 平松邦仁 (hira@rvf-rc45.net)
	@copyright	Copyright (C) 2018 Kunihito Hiramatsu @n
				Released under the MIT license @n
				https://github.com/hirakuni45/RX/blob/master/LICENSE
*/
//=====================================================================//
#include "common/vtx.hpp"

namespace graphics {

	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	/*!
		@brief	TinyGL class
		@param[in]	VNUM	頂点バッファ数
	*/
	//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	template<uint32_t VNUM>
	class tgl {

		union vtx_t {
			vtx::spos	s2;
			vtx::ipos	i2;
			vtx::fpos	f2;
			vtx::svtx	s3;
			vtx::ivtx	i3;
			vtx::fvtx	f3;
		};
		vtx_t		vtx_[VNUM];
		uint32_t	vidx_;

	public:
		//-----------------------------------------------------------------//
		/*!
			@brief	コンストラクター
		*/
		//-----------------------------------------------------------------//
		tgl() : vidx_(0) { }


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（spos）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::spos& v)
		{
			if(vidx_ >= VNUM) return;
			vtx_[vidx_].s2 = v;
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（ipos）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::ipos& v)
		{
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（fpos）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::fpos& v)
		{
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（svtx）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::svtx& v)
		{
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（ivtx）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::ivtx& v)
		{
		}


		//-----------------------------------------------------------------//
		/*!
			@brief	頂点の登録（fvtx）
			@param[in]	v	頂点
		*/
		//-----------------------------------------------------------------//
		void vertex(const vtx::fvtx& v)
		{
		}



	};
}
